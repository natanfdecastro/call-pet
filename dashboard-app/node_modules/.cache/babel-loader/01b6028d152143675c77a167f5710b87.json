{"ast":null,"code":"'use strict';\n\nvar _objectWithoutProperties = require('@babel/runtime/helpers/objectWithoutProperties');\n\nvar _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');\n\nvar _classCallCheck = require('@babel/runtime/helpers/classCallCheck');\n\nvar _createClass = require('@babel/runtime/helpers/createClass');\n\nvar _defineProperty = require('@babel/runtime/helpers/defineProperty');\n\nvar _regeneratorRuntime = require('@babel/runtime/regenerator');\n\nvar WebSocket = require('isomorphic-ws');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar _objectWithoutProperties__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutProperties);\n\nvar _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);\n\nvar _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n\nvar _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\nvar _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);\n\nvar _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);\n\nvar WebSocket__default = /*#__PURE__*/_interopDefaultLegacy(WebSocket);\n/**\n * @title @cubejs-client/ws-transport\n * @permalink /@cubejs-client-ws-transport\n * @menuCategory Cube.js Frontend\n * @subcategory Reference\n * @menuOrder 4\n * @description WebSocket transport for Cube.js client\n */\n\n\nvar WebSocketTransportResult = /*#__PURE__*/function () {\n  function WebSocketTransportResult(_ref) {\n    var status = _ref.status,\n        message = _ref.message;\n\n    _classCallCheck__default['default'](this, WebSocketTransportResult);\n\n    _defineProperty__default['default'](this, \"status\", void 0);\n\n    _defineProperty__default['default'](this, \"result\", void 0);\n\n    this.status = status;\n    this.result = message;\n  }\n\n  _createClass__default['default'](WebSocketTransportResult, [{\n    key: \"json\",\n    value: function () {\n      var _json = _asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee() {\n        return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.result);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function json() {\n        return _json.apply(this, arguments);\n      }\n\n      return json;\n    }()\n  }]);\n\n  return WebSocketTransportResult;\n}();\n\nvar WebSocketTransport = /*#__PURE__*/function () {\n  function WebSocketTransport(_ref2) {\n    var authorization = _ref2.authorization,\n        apiUrl = _ref2.apiUrl,\n        heartBeatInterval = _ref2.heartBeatInterval,\n        hearBeatInterval = _ref2.hearBeatInterval;\n\n    _classCallCheck__default['default'](this, WebSocketTransport);\n\n    _defineProperty__default['default'](this, \"apiUrl\", void 0);\n\n    _defineProperty__default['default'](this, \"heartBeatInterval\", 60);\n\n    _defineProperty__default['default'](this, \"token\", void 0);\n\n    _defineProperty__default['default'](this, \"ws\", null);\n\n    _defineProperty__default['default'](this, \"messageCounter\", 1);\n\n    _defineProperty__default['default'](this, \"messageIdToSubscription\", {});\n\n    _defineProperty__default['default'](this, \"messageQueue\", []);\n\n    this.token = authorization;\n    this.apiUrl = apiUrl;\n\n    if (heartBeatInterval) {\n      this.heartBeatInterval = heartBeatInterval;\n    } else if (hearBeatInterval) {\n      console.warn('Option hearBeatInterval is deprecated. It was replaced by heartBeatInterval.');\n      this.heartBeatInterval = hearBeatInterval;\n    }\n  }\n\n  _createClass__default['default'](WebSocketTransport, [{\n    key: \"authorization\",\n    get: function get() {\n      return this.token;\n    },\n    set: function set(token) {\n      this.token = token;\n\n      if (this.ws) {\n        this.ws.close();\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee2() {\n        return _regeneratorRuntime__default['default'].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.ws) {\n                  this.ws.close();\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"initSocket\",\n    value: function initSocket() {\n      var _this = this;\n\n      if (this.ws) {\n        return this.ws.initPromise;\n      }\n\n      var ws = new WebSocket__default['default'](this.apiUrl);\n      ws.messageIdSent = {};\n\n      ws.sendMessage = function (message) {\n        if (!message.messageId || message.messageId && !ws.messageIdSent[message.messageId]) {\n          ws.send(JSON.stringify(message));\n          ws.messageIdSent[message.messageId] = true;\n        }\n      };\n\n      ws.sendQueue = function () {\n        _this.messageQueue.forEach(function (message) {\n          return ws.sendMessage(message);\n        });\n\n        _this.messageQueue = [];\n      };\n\n      ws.reconcile = function () {\n        if (new Date().getTime() - ws.lastMessageTimestamp.getTime() > 4 * _this.heartBeatInterval * 1000) {\n          ws.close();\n        } else {\n          Object.keys(_this.messageIdToSubscription).forEach(function (messageId) {\n            // @ts-ignore\n            ws.sendMessage(_this.messageIdToSubscription[messageId].message);\n          });\n        }\n      };\n\n      ws.lastMessageTimestamp = new Date();\n      ws.initPromise = new Promise(function (resolve) {\n        ws.onopen = function () {\n          ws.sendMessage({\n            authorization: _this.authorization\n          });\n        };\n\n        ws.onmessage = function (event) {\n          ws.lastMessageTimestamp = new Date();\n          var message = JSON.parse(event.data);\n\n          if (message.handshake) {\n            ws.reconcile();\n            ws.reconcileTimer = setInterval(function () {\n              ws.messageIdSent = {};\n              ws.reconcile();\n            }, _this.heartBeatInterval * 1000);\n            resolve();\n          }\n\n          if (_this.messageIdToSubscription[message.messageId]) {\n            _this.messageIdToSubscription[message.messageId].callback(new WebSocketTransportResult(message));\n          }\n\n          ws.sendQueue();\n        };\n\n        ws.onclose = function () {\n          if (ws && ws.readyState !== WebSocket__default['default'].CLOSED && ws.readyState !== WebSocket__default['default'].CLOSING) {\n            ws.close();\n          }\n\n          if (ws.reconcileTimer) {\n            clearInterval(ws.reconcileTimer);\n            ws.reconcileTimer = null;\n          }\n\n          if (_this.ws === ws) {\n            _this.ws = null;\n\n            if (Object.keys(_this.messageIdToSubscription).length) {\n              _this.initSocket();\n            }\n          }\n        };\n\n        ws.onerror = ws.onclose;\n      });\n      this.ws = ws;\n      return this.ws.initPromise;\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      var _this2 = this;\n\n      if (message.unsubscribe && this.messageQueue.find(function (m) {\n        return m.messageId === message.unsubscribe;\n      })) {\n        this.messageQueue = this.messageQueue.filter(function (m) {\n          return m.messageId !== message.unsubscribe;\n        });\n      } else {\n        this.messageQueue.push(message);\n      }\n\n      setTimeout( /*#__PURE__*/_asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee3() {\n        return _regeneratorRuntime__default['default'].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this2.initSocket();\n\n              case 2:\n                _this2.ws.sendQueue();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })), 100);\n    }\n  }, {\n    key: \"request\",\n    value: function request(method, _ref4) {\n      var baseRequestId = _ref4.baseRequestId,\n          params = _objectWithoutProperties__default['default'](_ref4, [\"baseRequestId\"]);\n\n      var message = {\n        messageId: this.messageCounter++,\n        requestId: baseRequestId,\n        method: method,\n        params: params\n      };\n      var pendingResults = [];\n      var nextMessage = null;\n\n      var runNextMessage = function runNextMessage() {\n        if (nextMessage) {\n          nextMessage(pendingResults.pop());\n          nextMessage = null;\n        }\n      };\n\n      this.messageIdToSubscription[message.messageId] = {\n        message: message,\n        callback: function callback(result) {\n          pendingResults.push(result);\n          runNextMessage();\n        }\n      };\n      var transport = this;\n      return {\n        subscribe: function subscribe(callback) {\n          var _this3 = this;\n\n          return _asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee4() {\n            var result;\n            return _regeneratorRuntime__default['default'].wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    transport.sendMessage(message);\n                    _context4.next = 3;\n                    return new Promise(function (resolve) {\n                      nextMessage = resolve;\n\n                      if (pendingResults.length) {\n                        runNextMessage();\n                      }\n                    });\n\n                  case 3:\n                    result = _context4.sent;\n                    return _context4.abrupt(\"return\", callback(result, function () {\n                      return _this3.subscribe(callback);\n                    }));\n\n                  case 5:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }))();\n        },\n        unsubscribe: function unsubscribe() {\n          return _asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee5() {\n            return _regeneratorRuntime__default['default'].wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    transport.sendMessage({\n                      unsubscribe: message.messageId\n                    });\n                    delete transport.messageIdToSubscription[message.messageId];\n\n                  case 2:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }))();\n        }\n      };\n    }\n  }]);\n\n  return WebSocketTransport;\n}();\n\nmodule.exports = WebSocketTransport;","map":{"version":3,"sources":["../src/index.ts"],"names":["WebSocketTransportResult","status","message","WebSocketTransport","authorization","apiUrl","heartBeatInterval","hearBeatInterval","console","ws","WebSocket","JSON","Object","event","setInterval","resolve","clearInterval","m","setTimeout","baseRequestId","params","messageId","requestId","method","pendingResults","nextMessage","runNextMessage","callback","transport","subscribe","result","unsubscribe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMA,wBAAAA,GAAAA,aAAAA,YAAAA;AAKJ,WAAA,wBAAA,CAAA,IAAA,EAA+E;AAAA,QAA1DC,MAA0D,GAAA,IAAA,CAA1DA,MAA0D;AAAA,QAAlDC,OAAkD,GAAA,IAAA,CAAlDA,OAAkD;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,wBAAA;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA;;AAC7E,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,MAAA,GAAA,OAAA;AACD;;;;;mHAED,SAAA,OAAA,GAAA;AAAA,eAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAAA,uBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EACS,KADT,MAAA,CAAA;;AAAA,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,OAAA,EAAA,IAAA,CAAA;AAAA,O;;;;;;;;;;;CAVIF,E;;IAmCAG,kBAAAA,GAAAA,aAAAA,YAAAA;AAeJ,WAAA,kBAAA,CAAA,KAAA,EAA8G;AAAA,QAAzFC,aAAyF,GAAA,KAAA,CAAzFA,aAAyF;AAAA,QAA1EC,MAA0E,GAAA,KAAA,CAA1EA,MAA0E;AAAA,QAAlEC,iBAAkE,GAAA,KAAA,CAAlEA,iBAAkE;AAAA,QAA/CC,gBAA+C,GAAA,KAAA,CAA/CA,gBAA+C;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,kBAAA;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,mBAAA,EAZ/D,EAY+D;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAR1F,IAQ0F;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,gBAAA,EAN3E,CAM2E;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,yBAAA,EAJ5C,EAI4C;;AAAA,IAAA,wBAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,cAAA,EAF1E,EAE0E;;AAC5G,SAAA,KAAA,GAAA,aAAA;AACA,SAAA,MAAA,GAAA,MAAA;;AAEA,QAAA,iBAAA,EAAuB;AACrB,WAAA,iBAAA,GAAA,iBAAA;AADF,KAAA,MAEO,IAAA,gBAAA,EAAsB;AAC3BC,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,8EAAAA;AACA,WAAA,iBAAA,GAAA,gBAAA;AACD;AACF;;;;SAgBD,SAAA,GAAA,GAA2B;AACzB,aAAO,KAAP,KAAA;AACD,K;SAhBD,SAAA,GAAA,CAAA,KAAA,EAAgC;AAC9B,WAAA,KAAA,GAAA,KAAA;;AAEA,UAAI,KAAJ,EAAA,EAAa;AACX,aAAA,EAAA,CAAA,KAAA;AACD;AACF;;;;oHAED,SAAA,QAAA,GAAA;AAAA,eAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AACE,oBAAI,KAAJ,EAAA,EAAa;AACX,uBAAA,EAAA,CAAA,KAAA;AACD;;AAHH,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,QAAA,EAAA,IAAA,CAAA;AAAA,O;;;;;;;;;;WAUA,SAAA,UAAA,GAAuB;AAAA,UAAA,KAAA,GAAA,IAAA;;AACrB,UAAI,KAAJ,EAAA,EAAa;AACX,eAAO,KAAA,EAAA,CAAP,WAAA;AACD;;AAED,UAAMC,EAAO,GAAG,IAAIC,kBAAAA,CAAJ,SAAIA,CAAJ,CAAc,KAA9B,MAAgB,CAAhB;AAEAD,MAAAA,EAAE,CAAFA,aAAAA,GAAAA,EAAAA;;AAEAA,MAAAA,EAAE,CAAFA,WAAAA,GAAiB,UAAA,OAAA,EAAkB;AACjC,YAAI,CAACP,OAAO,CAAR,SAAA,IAAsBA,OAAO,CAAPA,SAAAA,IAAqB,CAACO,EAAE,CAAFA,aAAAA,CAAiBP,OAAO,CAAxE,SAAgDO,CAAhD,EAAqF;AACnFA,UAAAA,EAAE,CAAFA,IAAAA,CAAQE,IAAI,CAAJA,SAAAA,CAARF,OAAQE,CAARF;AACAA,UAAAA,EAAE,CAAFA,aAAAA,CAAiBP,OAAO,CAAxBO,SAAAA,IAAAA,IAAAA;AACD;AAJHA,OAAAA;;AAOAA,MAAAA,EAAE,CAAFA,SAAAA,GAAe,YAAM;AACnB,QAAA,KAAI,CAAJ,YAAA,CAAA,OAAA,CAA0B,UAAA,OAAA,EAAO;AAAA,iBAAIA,EAAE,CAAFA,WAAAA,CAAJ,OAAIA,CAAJ;AAAjC,SAAA;;AACA,QAAA,KAAI,CAAJ,YAAA,GAAA,EAAA;AAFFA,OAAAA;;AAKAA,MAAAA,EAAE,CAAFA,SAAAA,GAAe,YAAM;AACnB,YAAI,IAAA,IAAA,GAAA,OAAA,KAAuBA,EAAE,CAAFA,oBAAAA,CAAvB,OAAuBA,EAAvB,GAA2D,IAAI,KAAI,CAAR,iBAAA,GAA/D,IAAA,EAAkG;AAChGA,UAAAA,EAAE,CAAFA,KAAAA;AADF,SAAA,MAEO;AACLG,UAAAA,MAAM,CAANA,IAAAA,CAAY,KAAI,CAAhBA,uBAAAA,EAAAA,OAAAA,CAAkD,UAAA,SAAA,EAAa;AAC7D;AACAH,YAAAA,EAAE,CAAFA,WAAAA,CAAe,KAAI,CAAJ,uBAAA,CAAA,SAAA,EAAfA,OAAAA;AAFFG,WAAAA;AAID;AARHH,OAAAA;;AAWAA,MAAAA,EAAE,CAAFA,oBAAAA,GAA0B,IAA1BA,IAA0B,EAA1BA;AAEAA,MAAAA,EAAE,CAAFA,WAAAA,GAAiB,IAAA,OAAA,CAAkB,UAAA,OAAA,EAAW;AAC5CA,QAAAA,EAAE,CAAFA,MAAAA,GAAY,YAAM;AAChBA,UAAAA,EAAE,CAAFA,WAAAA,CAAe;AAAEL,YAAAA,aAAa,EAAE,KAAI,CAACA;AAAtB,WAAfK;AADFA,SAAAA;;AAIAA,QAAAA,EAAE,CAAFA,SAAAA,GAAe,UAAA,KAAA,EAAgB;AAC7BA,UAAAA,EAAE,CAAFA,oBAAAA,GAA0B,IAA1BA,IAA0B,EAA1BA;AAEA,cAAMP,OAAY,GAAGS,IAAI,CAAJA,KAAAA,CAAWE,KAAK,CAArC,IAAqBF,CAArB;;AACA,cAAIT,OAAO,CAAX,SAAA,EAAuB;AACrBO,YAAAA,EAAE,CAAFA,SAAAA;AACAA,YAAAA,EAAE,CAAFA,cAAAA,GAAoBK,WAAW,CAAC,YAAM;AACpCL,cAAAA,EAAE,CAAFA,aAAAA,GAAAA,EAAAA;AACAA,cAAAA,EAAE,CAAFA,SAAAA;AAF6B,aAAA,EAG5B,KAAI,CAAJ,iBAAA,GAHHA,IAA+B,CAA/BA;AAIAM,YAAAA,OAAO;AACR;;AAED,cAAI,KAAI,CAAJ,uBAAA,CAA6Bb,OAAO,CAAxC,SAAI,CAAJ,EAAqD;AACnD,YAAA,KAAI,CAAJ,uBAAA,CAA6BA,OAAO,CAApC,SAAA,EAAA,QAAA,CACE,IAAA,wBAAA,CADF,OACE,CADF;AAGD;;AAEDO,UAAAA,EAAE,CAAFA,SAAAA;AAnBFA,SAAAA;;AAsBAA,QAAAA,EAAE,CAAFA,OAAAA,GAAa,YAAM;AACjB,cAAIA,EAAE,IAAIA,EAAE,CAAFA,UAAAA,KAAkBC,kBAAAA,CAAAA,SAAAA,CAAAA,CAAxBD,MAAAA,IAA4CA,EAAE,CAAFA,UAAAA,KAAkBC,kBAAAA,CAAAA,SAAAA,CAAAA,CAAlE,OAAA,EAAqF;AACnFD,YAAAA,EAAE,CAAFA,KAAAA;AACD;;AACD,cAAIA,EAAE,CAAN,cAAA,EAAuB;AACrBO,YAAAA,aAAa,CAACP,EAAE,CAAhBO,cAAa,CAAbA;AACAP,YAAAA,EAAE,CAAFA,cAAAA,GAAAA,IAAAA;AACD;;AACD,cAAI,KAAI,CAAJ,EAAA,KAAJ,EAAA,EAAoB;AAClB,YAAA,KAAI,CAAJ,EAAA,GAAA,IAAA;;AACA,gBAAIG,MAAM,CAANA,IAAAA,CAAY,KAAI,CAAhBA,uBAAAA,EAAJ,MAAA,EAAsD;AACpD,cAAA,KAAI,CAAJ,UAAA;AACD;AACF;AAbHH,SAAAA;;AAgBAA,QAAAA,EAAE,CAAFA,OAAAA,GAAaA,EAAE,CAAfA,OAAAA;AA3CFA,OAAiB,CAAjBA;AA8CA,WAAA,EAAA,GAAA,EAAA;AAEA,aAAO,KAAA,EAAA,CAAP,WAAA;AACD;;;WAED,SAAA,WAAA,CAAA,OAAA,EAAoC;AAAA,UAAA,MAAA,GAAA,IAAA;;AAClC,UAAIP,OAAO,CAAPA,WAAAA,IAAuB,KAAA,YAAA,CAAA,IAAA,CAAuB,UAAA,CAAA,EAAC;AAAA,eAAIe,CAAC,CAADA,SAAAA,KAAgBf,OAAO,CAA3B,WAAA;AAAnD,OAA2B,CAA3B,EAA6F;AAC3F,aAAA,YAAA,GAAoB,KAAA,YAAA,CAAA,MAAA,CAAyB,UAAA,CAAA,EAAC;AAAA,iBAAIe,CAAC,CAADA,SAAAA,KAAgBf,OAAO,CAA3B,WAAA;AAA9C,SAAoB,CAApB;AADF,OAAA,MAEO;AACL,aAAA,YAAA,CAAA,IAAA,CAAA,OAAA;AACD;;AAEDgB,MAAAA,UAAU,EAAA,aAAA,0BAAA,CAAA,SAAA,CAAA,EAAA,aAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAC,SAAA,QAAA,GAAA;AAAA,eAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBACH,MAAI,CADD,UACH,EADG;;AAAA,mBAAA,CAAA;AAET,gBAAA,MAAI,CAAJ,EAAA,CAAA,SAAA;;AAFS,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,QAAA,CAAA;AAAD,OAAA,CAAA,CAAA,EAAVA,GAAU,CAAVA;AAID;;;WAED,SAAA,OAAA,CAAA,MAAA,EAAA,KAAA,EAGgD;AAAA,UAD5CC,aAC4C,GAAA,KAAA,CAD5CA,aAC4C;AAAA,UAD1BC,MAC0B,GAAA,iCAAA,CAAA,SAAA,CAAA,CAAA,KAAA,EAAA,CAAA,eAAA,CAAA,CAAA;;AAC9C,UAAMlB,OAAgB,GAAG;AACvBmB,QAAAA,SAAS,EAAE,KADY,cACZ,EADY;AAEvBC,QAAAA,SAAS,EAFc,aAAA;AAGvBC,QAAAA,MAAM,EAHiB,MAAA;AAIvBH,QAAAA,MAAM,EAANA;AAJuB,OAAzB;AAOA,UAAMI,cAA0C,GAAhD,EAAA;AACA,UAAIC,WAAwC,GAA5C,IAAA;;AAEA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,YAAA,WAAA,EAAiB;AACfD,UAAAA,WAAW,CAACD,cAAc,CAA1BC,GAAYD,EAAD,CAAXC;AACAA,UAAAA,WAAW,GAAXA,IAAAA;AACD;AAJH,OAAA;;AAOA,WAAA,uBAAA,CAA6BvB,OAAO,CAApC,SAAA,IAAkD;AAChDA,QAAAA,OAAO,EADyC,OAAA;AAEhDyB,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,MAAA,EAAY;AACpBH,UAAAA,cAAc,CAAdA,IAAAA,CAAAA,MAAAA;AACAE,UAAAA,cAAc;AACf;AAL+C,OAAlD;AAQA,UAAME,SAAS,GAAf,IAAA;AAEA,aAAO;AACCC,QAAAA,SADD,EAAA,SAAA,SAAA,CAAA,QAAA,EACqB;AAAA,cAAA,MAAA,GAAA,IAAA;;AAAA,iBAAA,0BAAA,CAAA,SAAA,CAAA,EAAA,aAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,QAAA,GAAA;AAAA,gBAAA,MAAA;AAAA,mBAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,qBAAA,CAAA,EAAA;AAAA,wBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,uBAAA,CAAA;AACxBD,oBAAAA,SAAS,CAATA,WAAAA,CAAAA,OAAAA;AADwB,oBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,2BAGH,IAAA,OAAA,CAAsC,UAAA,OAAA,EAAa;AACtEH,sBAAAA,WAAW,GAAXA,OAAAA;;AACA,0BAAID,cAAc,CAAlB,MAAA,EAA2B;AACzBE,wBAAAA,cAAc;AACf;AAPqB,qBAGH,CAHG;;AAAA,uBAAA,CAAA;AAGlBI,oBAAAA,MAHkB,GAAA,SAAA,CAAA,IAGlBA;AAHkB,2BAAA,SAAA,CAAA,MAAA,CAAA,QAAA,EAUjBH,QAAQ,CAAA,MAAA,EAAS,YAAA;AAAA,6BAAM,MAAI,CAAJ,SAAA,CAAN,QAAM,CAAN;AAVA,qBAUT,CAVS,CAAA;;AAAA,uBAAA,CAAA;AAAA,uBAAA,KAAA;AAAA,2BAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,aAAA,EAAA,QAAA,CAAA;AAAA,WAAA,CAAA,GAAA;AADrB,SAAA;AAaCI,QAAAA,WAbD,EAAA,SAAA,WAAA,GAae;AAAA,iBAAA,0BAAA,CAAA,SAAA,CAAA,EAAA,aAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,QAAA,GAAA;AAAA,mBAAA,4BAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,qBAAA,CAAA,EAAA;AAAA,wBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,uBAAA,CAAA;AAClBH,oBAAAA,SAAS,CAATA,WAAAA,CAAsB;AAAEG,sBAAAA,WAAW,EAAE7B,OAAO,CAACmB;AAAvB,qBAAtBO;AACA,2BAAOA,SAAS,CAATA,uBAAAA,CAAkC1B,OAAO,CAAhD,SAAO0B,CAAP;;AAFkB,uBAAA,CAAA;AAAA,uBAAA,KAAA;AAAA,2BAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,aAAA,EAAA,QAAA,CAAA;AAAA,WAAA,CAAA,GAAA;AAGnB;AAhBI,OAAP;AAkBD;;;;CAhMGzB,E","sourcesContent":["import WebSocket from 'isomorphic-ws';\nimport type { ITransport, ITransportResponse } from '@cubejs-client/core';\n\n/**\n * @title @cubejs-client/ws-transport\n * @permalink /@cubejs-client-ws-transport\n * @menuCategory Cube.js Frontend\n * @subcategory Reference\n * @menuOrder 4\n * @description WebSocket transport for Cube.js client\n */\n\nclass WebSocketTransportResult {\n  protected readonly status: unknown;\n\n  protected readonly result: unknown;\n\n  public constructor({ status, message }: { status: unknown, message: unknown }) {\n    this.status = status;\n    this.result = message;\n  }\n\n  public async json() {\n    return this.result;\n  }\n}\n\ntype WebSocketTransportOptions = {\n  authorization?: string,\n  apiUrl: string,\n  // @deprecated\n  hearBeatInterval?: number,\n  heartBeatInterval?: number,\n};\n\ntype Message = {\n  messageId: number,\n  requestId: any,\n  method: string,\n  params: Record<string, unknown>,\n};\n\ntype Subscription = {\n  message: Message,\n  callback: (result: WebSocketTransportResult) => void,\n};\n\nclass WebSocketTransport implements ITransport<WebSocketTransportResult> {\n  protected readonly apiUrl: string;\n\n  protected readonly heartBeatInterval: number = 60;\n\n  protected token: string | undefined;\n\n  protected ws: any = null;\n\n  protected messageCounter: number = 1;\n\n  protected messageIdToSubscription: Record<number, Subscription> = {};\n\n  protected messageQueue: Message[] = [];\n\n  public constructor({ authorization, apiUrl, heartBeatInterval, hearBeatInterval }: WebSocketTransportOptions) {\n    this.token = authorization;\n    this.apiUrl = apiUrl;\n\n    if (heartBeatInterval) {\n      this.heartBeatInterval = heartBeatInterval;\n    } else if (hearBeatInterval) {\n      console.warn('Option hearBeatInterval is deprecated. It was replaced by heartBeatInterval.');\n      this.heartBeatInterval = hearBeatInterval;\n    }\n  }\n\n  public set authorization(token) {\n    this.token = token;\n\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n\n  public async close(): Promise<void> {\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n\n  public get authorization() {\n    return this.token;\n  }\n\n  protected initSocket() {\n    if (this.ws) {\n      return this.ws.initPromise;\n    }\n\n    const ws: any = new WebSocket(this.apiUrl);\n\n    ws.messageIdSent = {};\n\n    ws.sendMessage = (message: any) => {\n      if (!message.messageId || message.messageId && !ws.messageIdSent[message.messageId]) {\n        ws.send(JSON.stringify(message));\n        ws.messageIdSent[message.messageId] = true;\n      }\n    };\n\n    ws.sendQueue = () => {\n      this.messageQueue.forEach(message => ws.sendMessage(message));\n      this.messageQueue = [];\n    };\n\n    ws.reconcile = () => {\n      if (new Date().getTime() - ws.lastMessageTimestamp.getTime() > 4 * this.heartBeatInterval * 1000) {\n        ws.close();\n      } else {\n        Object.keys(this.messageIdToSubscription).forEach(messageId => {\n          // @ts-ignore\n          ws.sendMessage(this.messageIdToSubscription[messageId].message);\n        });\n      }\n    };\n\n    ws.lastMessageTimestamp = new Date();\n\n    ws.initPromise = new Promise<void>(resolve => {\n      ws.onopen = () => {\n        ws.sendMessage({ authorization: this.authorization });\n      };\n\n      ws.onmessage = (event: any) => {\n        ws.lastMessageTimestamp = new Date();\n\n        const message: any = JSON.parse(event.data);\n        if (message.handshake) {\n          ws.reconcile();\n          ws.reconcileTimer = setInterval(() => {\n            ws.messageIdSent = {};\n            ws.reconcile();\n          }, this.heartBeatInterval * 1000);\n          resolve();\n        }\n\n        if (this.messageIdToSubscription[message.messageId]) {\n          this.messageIdToSubscription[message.messageId].callback(\n            new WebSocketTransportResult(message)\n          );\n        }\n\n        ws.sendQueue();\n      };\n\n      ws.onclose = () => {\n        if (ws && ws.readyState !== WebSocket.CLOSED && ws.readyState !== WebSocket.CLOSING) {\n          ws.close();\n        }\n        if (ws.reconcileTimer) {\n          clearInterval(ws.reconcileTimer);\n          ws.reconcileTimer = null;\n        }\n        if (this.ws === ws) {\n          this.ws = null;\n          if (Object.keys(this.messageIdToSubscription).length) {\n            this.initSocket();\n          }\n        }\n      };\n\n      ws.onerror = ws.onclose;\n    });\n\n    this.ws = ws;\n\n    return this.ws.initPromise;\n  }\n\n  protected sendMessage(message: any) {\n    if (message.unsubscribe && this.messageQueue.find(m => m.messageId === message.unsubscribe)) {\n      this.messageQueue = this.messageQueue.filter(m => m.messageId !== message.unsubscribe);\n    } else {\n      this.messageQueue.push(message);\n    }\n\n    setTimeout(async () => {\n      await this.initSocket();\n      this.ws.sendQueue();\n    }, 100);\n  }\n\n  public request(\n    method: string,\n    { baseRequestId, ...params }: Record<string, unknown>\n  ): ITransportResponse<WebSocketTransportResult> {\n    const message: Message = {\n      messageId: this.messageCounter++,\n      requestId: baseRequestId,\n      method,\n      params\n    };\n\n    const pendingResults: WebSocketTransportResult[] = [];\n    let nextMessage: ((value: any) => void)|null = null;\n\n    const runNextMessage = () => {\n      if (nextMessage) {\n        nextMessage(pendingResults.pop());\n        nextMessage = null;\n      }\n    };\n\n    this.messageIdToSubscription[message.messageId] = {\n      message,\n      callback: (result) => {\n        pendingResults.push(result);\n        runNextMessage();\n      }\n    };\n\n    const transport = this;\n\n    return {\n      async subscribe(callback) {\n        transport.sendMessage(message);\n\n        const result = await new Promise<WebSocketTransportResult>((resolve) => {\n          nextMessage = resolve;\n          if (pendingResults.length) {\n            runNextMessage();\n          }\n        });\n\n        return callback(result, () => this.subscribe(callback));\n      },\n      async unsubscribe() {\n        transport.sendMessage({ unsubscribe: message.messageId });\n        delete transport.messageIdToSubscription[message.messageId];\n      }\n    };\n  }\n}\n\nexport default WebSocketTransport;\n"]},"metadata":{},"sourceType":"script"}