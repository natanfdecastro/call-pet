{"ast":null,"code":"var _jsxFileName = \"/home/natanfdecastro/Documents/tecnologico-de-costa-rica/ingenieria-computacion-411/ic-411-i-semestre-2021/ic-7842-proyecto/call-pet/dashboard-app/src/components/ChartRenderer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCubeQuery } from '@cubejs-client/react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS_SERIES = ['#FF6492', '#141446', '#7A77FF'];\nconst commonOptions = {\n  maintainAspectRatio: false\n};\nconst TypeToChartComponent = {\n  line: ({\n    resultSet\n  }) => {\n    const data = {\n      labels: resultSet.categories().map(c => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map(r => r.value),\n        borderColor: COLORS_SERIES[index],\n        fill: false\n      }))\n    };\n    const options = { ...commonOptions\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  },\n  bar: ({\n    resultSet\n  }) => {\n    const data = {\n      labels: resultSet.categories().map(c => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map(r => r.value),\n        backgroundColor: COLORS_SERIES[index],\n        fill: false\n      }))\n    };\n    const options = { ...commonOptions,\n      scales: {\n        xAxes: [{\n          stacked: false\n        }]\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  },\n  area: ({\n    resultSet\n  }) => {\n    const data = {\n      labels: resultSet.categories().map(c => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map(r => r.value),\n        backgroundColor: COLORS_SERIES[index]\n      }))\n    };\n    const options = { ...commonOptions,\n      scales: {\n        yAxes: [{\n          stacked: false\n        }]\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  },\n  pie: ({\n    resultSet\n  }) => {\n    const data = {\n      labels: resultSet.categories().map(c => c.category),\n      datasets: resultSet.series().map(s => ({\n        label: s.title,\n        data: s.series.map(r => r.value),\n        backgroundColor: COLORS_SERIES,\n        hoverBackgroundColor: COLORS_SERIES\n      }))\n    };\n    const options = { ...commonOptions\n    };\n    return /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  },\n\n  number({\n    resultSet\n  }) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        textAlign: 'center'\n      },\n      children: resultSet.seriesNames().map(s => resultSet.totalRow()[s.key])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  },\n\n  table({\n    resultSet\n  }) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: resultSet.tableColumns().map(c => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: c.title\n          }, c.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: resultSet.tablePivot().map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: resultSet.tableColumns().map(c => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[c.key]\n          }, c.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n};\nconst TypeToMemoChartComponent = Object.keys(TypeToChartComponent).map(key => ({\n  [key]: /*#__PURE__*/React.memo(TypeToChartComponent[key])\n})).reduce(_c = (a, b) => ({ ...a,\n  ...b\n}));\n_c2 = TypeToMemoChartComponent;\n\nconst renderChart = Component => ({\n  resultSet,\n  error,\n  ...props\n}) => resultSet && /*#__PURE__*/_jsxDEV(Component, {\n  resultSet: resultSet,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 17\n}, this) || error && error.toString() || /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 34\n}, this);\n\nconst ChartRenderer = ({\n  vizState\n}) => {\n  _s();\n\n  const {\n    query,\n    chartType,\n    ...options\n  } = vizState;\n  const component = TypeToMemoChartComponent[chartType];\n  const renderProps = useCubeQuery(query);\n  return component && renderChart(component)({ ...options,\n    ...renderProps\n  });\n};\n\n_s(ChartRenderer, \"1q47650IbpuyXzm48NQxHM6+8XM=\", false, function () {\n  return [useCubeQuery];\n});\n\n_c3 = ChartRenderer;\nChartRenderer.propTypes = {\n  vizState: PropTypes.object,\n  cubejsApi: PropTypes.object\n};\nChartRenderer.defaultProps = {\n  vizState: {},\n  cubejsApi: null\n};\nexport default ChartRenderer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TypeToMemoChartComponent$Object.keys(TypeToChartComponent)\\n  .map((key) => ({\\n    [key]: React.memo(TypeToChartComponent[key]),\\n  }))\\n  .reduce\");\n$RefreshReg$(_c2, \"TypeToMemoChartComponent\");\n$RefreshReg$(_c3, \"ChartRenderer\");","map":{"version":3,"sources":["/home/natanfdecastro/Documents/tecnologico-de-costa-rica/ingenieria-computacion-411/ic-411-i-semestre-2021/ic-7842-proyecto/call-pet/dashboard-app/src/components/ChartRenderer.js"],"names":["React","PropTypes","useCubeQuery","CircularProgress","Line","Bar","Pie","Typography","Table","TableBody","TableCell","TableHead","TableRow","COLORS_SERIES","commonOptions","maintainAspectRatio","TypeToChartComponent","line","resultSet","data","labels","categories","map","c","category","datasets","series","s","index","label","title","r","value","borderColor","fill","options","bar","backgroundColor","scales","xAxes","stacked","area","yAxes","pie","hoverBackgroundColor","number","textAlign","seriesNames","totalRow","key","table","tableColumns","tablePivot","row","TypeToMemoChartComponent","Object","keys","memo","reduce","a","b","renderChart","Component","error","props","toString","ChartRenderer","vizState","query","chartType","component","renderProps","propTypes","object","cubejsApi","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCubeQuery } from '@cubejs-client/react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nconst COLORS_SERIES = ['#FF6492', '#141446', '#7A77FF'];\nconst commonOptions = {\n  maintainAspectRatio: false,\n};\nconst TypeToChartComponent = {\n  line: ({ resultSet }) => {\n    const data = {\n      labels: resultSet.categories().map((c) => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map((r) => r.value),\n        borderColor: COLORS_SERIES[index],\n        fill: false,\n      })),\n    };\n    const options = { ...commonOptions };\n    return <Line data={data} options={options} />;\n  },\n  bar: ({ resultSet }) => {\n    const data = {\n      labels: resultSet.categories().map((c) => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map((r) => r.value),\n        backgroundColor: COLORS_SERIES[index],\n        fill: false,\n      })),\n    };\n    const options = {\n      ...commonOptions,\n      scales: {\n        xAxes: [\n          {\n            stacked: false,\n          },\n        ],\n      },\n    };\n    return <Bar data={data} options={options} />;\n  },\n  area: ({ resultSet }) => {\n    const data = {\n      labels: resultSet.categories().map((c) => c.category),\n      datasets: resultSet.series().map((s, index) => ({\n        label: s.title,\n        data: s.series.map((r) => r.value),\n        backgroundColor: COLORS_SERIES[index],\n      })),\n    };\n    const options = {\n      ...commonOptions,\n      scales: {\n        yAxes: [\n          {\n            stacked: false,\n          },\n        ],\n      },\n    };\n    return <Line data={data} options={options} />;\n  },\n  pie: ({ resultSet }) => {\n    const data = {\n      labels: resultSet.categories().map((c) => c.category),\n      datasets: resultSet.series().map((s) => ({\n        label: s.title,\n        data: s.series.map((r) => r.value),\n        backgroundColor: COLORS_SERIES,\n        hoverBackgroundColor: COLORS_SERIES,\n      })),\n    };\n    const options = { ...commonOptions };\n    return <Pie data={data} options={options} />;\n  },\n\n  number({ resultSet }) {\n    return (\n      <Typography\n        variant=\"h4\"\n        style={{\n          textAlign: 'center',\n        }}\n      >\n        {resultSet.seriesNames().map((s) => resultSet.totalRow()[s.key])}\n      </Typography>\n    );\n  },\n\n  table({ resultSet }) {\n    return (\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {resultSet.tableColumns().map((c) => (\n              <TableCell key={c.key}>{c.title}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {resultSet.tablePivot().map((row, index) => (\n            <TableRow key={index}>\n              {resultSet.tableColumns().map((c) => (\n                <TableCell key={c.key}>{row[c.key]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  },\n};\nconst TypeToMemoChartComponent = Object.keys(TypeToChartComponent)\n  .map((key) => ({\n    [key]: React.memo(TypeToChartComponent[key]),\n  }))\n  .reduce((a, b) => ({ ...a, ...b }));\n\nconst renderChart = (Component) => ({ resultSet, error, ...props }) =>\n  (resultSet && <Component resultSet={resultSet} {...props} />) ||\n  (error && error.toString()) || <CircularProgress />;\n\nconst ChartRenderer = ({ vizState }) => {\n  const { query, chartType, ...options } = vizState;\n  const component = TypeToMemoChartComponent[chartType];\n  const renderProps = useCubeQuery(query);\n  return component && renderChart(component)({ ...options, ...renderProps });\n};\n\nChartRenderer.propTypes = {\n  vizState: PropTypes.object,\n  cubejsApi: PropTypes.object,\n};\nChartRenderer.defaultProps = {\n  vizState: {},\n  cubejsApi: null,\n};\nexport default ChartRenderer;\n"]},"metadata":{},"sourceType":"module"}