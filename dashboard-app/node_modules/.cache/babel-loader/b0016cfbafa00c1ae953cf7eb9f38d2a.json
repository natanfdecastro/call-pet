{"ast":null,"code":"var _jsxFileName = \"/home/kenneth/Desktop/call-pet/dashboard-app/src/components/TableCliente.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useCubeQuery } from \"@cubejs-client/react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Card, CardActions, CardContent, Table, TableBody, TableCell, TableHead, TableRow, TablePagination, Typography } from \"@material-ui/core\";\nimport StatusBullet from \"./StatusBullet\";\nimport palette from \"../theme/palette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  content: {\n    padding: 0\n  },\n  head: {\n    backgroundColor: palette.background.gray\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: \"flex\",\n    alignItems: \"baseline\"\n  },\n  status: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: \"flex-end\"\n  }\n}));\nconst statusColors = {\n  true: \"success\",\n  false: \"danger\"\n};\n\nconst TableComponent = props => {\n  _s();\n\n  const {\n    className,\n    query,\n    cubejsApi,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const tableHeaders = [{\n    text: \"Cliente id\",\n    value: \"Cliente.id\"\n  }, {\n    text: \"Nombre\",\n    value: \"Cliente.nombre\"\n  }, {\n    text: \"Primer apellido\",\n    value: \"Cliente.primer_apellido\"\n  }, {\n    text: \"Segundo apellido\",\n    value: \"Cliente.segundo_apellido\"\n  }, {\n    text: \"Telefono\",\n    value: \"Cliente.telefono\"\n  }, {\n    text: \"Direccion Entrega\",\n    value: \"Cliente.direccion_entrega\"\n  }, {\n    text: \"Notificacion\",\n    value: \"Cliente.notificacion\"\n  }];\n  const {\n    resultSet,\n    error,\n    isLoading\n  } = useCubeQuery(query, {\n    cubejsApi\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 91\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (resultSet) {\n    let cliente = resultSet.tablePivot();\n\n    const handlePageChange = (event, page) => {\n      setPage(page);\n    };\n\n    const handleRowsPerPageChange = event => {\n      setRowsPerPage(event.target.value);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, { ...rest,\n      padding: \"0\",\n      className: clsx(classes.root, className),\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.inner,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                className: classes.head,\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: tableHeaders.map(item => /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: classes.hoverable,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 25\n                    }, this)\n                  }, item.value + Math.random(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: cliente.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(obj => /*#__PURE__*/_jsxDEV(TableRow, {\n                  className: classes.tableRow,\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.id\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.nombre\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.primer_apellido\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.segundo_apellido\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.telefono\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: obj[\"Cliente.direccion_entrega\"]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(StatusBullet, {\n                      className: classes.status,\n                      color: statusColors[obj[\"Cliente.notificacion\"]],\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this), obj[\"Cliente.notificacion\"].toString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this)]\n                }, obj[\"Cliente.id\"], true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          component: \"div\",\n          count: cliente.length,\n          onChangePage: handlePageChange,\n          onChangeRowsPerPage: handleRowsPerPageChange,\n          page: page,\n          rowsPerPage: rowsPerPage,\n          rowsPerPageOptions: [5, 10, 25, 50, 100]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(TableComponent, \"eAsqO3MwIBarRAVhy92JLqvdx0k=\", false, function () {\n  return [useStyles, useCubeQuery];\n});\n\n_c = TableComponent;\nTableComponent.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.object.isRequired\n};\nexport default TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/home/kenneth/Desktop/call-pet/dashboard-app/src/components/TableCliente.js"],"names":["React","useState","clsx","PropTypes","moment","PerfectScrollbar","makeStyles","useCubeQuery","CircularProgress","Card","CardActions","CardContent","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","Typography","StatusBullet","palette","useStyles","theme","root","padding","content","head","backgroundColor","background","gray","inner","minWidth","nameContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","statusColors","true","false","TableComponent","props","className","query","cubejsApi","rest","classes","rowsPerPage","setRowsPerPage","page","setPage","tableHeaders","text","value","resultSet","error","isLoading","toString","cliente","tablePivot","handlePageChange","event","handleRowsPerPageChange","target","map","item","hoverable","Math","random","slice","obj","tableRow","length","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useCubeQuery } from \"@cubejs-client/react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination, Typography\n} from \"@material-ui/core\";import StatusBullet from \"./StatusBullet\";\nimport palette from \"../theme/palette\";const useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  content: {\n    padding: 0\n  },\n  head: {\n    backgroundColor: palette.background.gray\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: \"flex\",\n    alignItems: \"baseline\"\n  },\n  status: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: \"flex-end\"\n  },\n}));const statusColors = {\n  true: \"success\",\n  false: \"danger\"\n};const TableComponent = props => {const { className, query, cubejsApi, ...rest } = props;const classes = useStyles();const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);const tableHeaders = [\n    {\n      text: \"Cliente id\",\n      value: \"Cliente.id\"\n    },\n    {\n      text: \"Nombre\",\n      value: \"Cliente.nombre\"\n    },\n    {\n      text: \"Primer apellido\",\n      value: \"Cliente.primer_apellido\"\n    },\n    {\n      text: \"Segundo apellido\",\n      value: \"Cliente.segundo_apellido\"\n    },\n    {\n      text: \"Telefono\",\n      value: \"Cliente.telefono\"\n    },\n    {\n      text: \"Direccion Entrega\",\n      value: \"Cliente.direccion_entrega\"\n    },\n    {\n      text: \"Notificacion\",\n      value: \"Cliente.notificacion\"\n    }\n  ];\n  const { resultSet, error, isLoading } = useCubeQuery(query, { cubejsApi });\n  if (isLoading) {\n    return <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}><CircularProgress color=\"secondary\" /></div>;\n  }\n  if (error) {\n    return <pre>{error.toString()}</pre>;\n  }\n  if (resultSet) {\n    let cliente = resultSet.tablePivot();const handlePageChange = (event, page) => {\n      setPage(page);\n    };\n    const handleRowsPerPageChange = event => {\n      setRowsPerPage(event.target.value);\n    };return (\n      <Card\n        {...rest}\n        padding={\"0\"}\n        className={clsx(classes.root, className)}\n      >\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead className={classes.head}>\n                  <TableRow>\n                    {tableHeaders.map((item) => (\n                      <TableCell key={item.value + Math.random()} \n                 className={classes.hoverable}           \n                      >\n                        <span>{item.text}</span>\n              \n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {cliente.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(obj => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={obj[\"Cliente.id\"]}\n                    >\n                      <TableCell>\n                        {obj[\"Cliente.id\"]}\n                      </TableCell>\n                      <TableCell>\n                        {obj[\"Cliente.nombre\"]}\n                      </TableCell>\n                      <TableCell>\n                        {obj[\"Cliente.primer_apellido\"]}\n                      </TableCell>\n                      <TableCell>\n                        {obj[\"Cliente.segundo_apellido\"]}\n                      </TableCell>\n                      <TableCell>\n                        {obj[\"Cliente.telefono\"]}\n                      </TableCell>\n                      <TableCell>\n                        {obj[\"Cliente.direccion_entrega\"]}\n                      </TableCell>\n                      <TableCell>\n                        <StatusBullet\n                          className={classes.status}\n                          color={statusColors[obj[\"Cliente.notificacion\"]]}\n                          size=\"sm\"\n                        />\n                        {obj[\"Cliente.notificacion\"].toString()}\n                       </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={cliente.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleRowsPerPageChange}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        </CardActions>\n      </Card>\n    );\n  } else {\n    return null\n  }\n};TableComponent.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.object.isRequired\n};export default TableComponent;"]},"metadata":{},"sourceType":"module"}