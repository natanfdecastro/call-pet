{"version":3,"file":"cubejs-client-ws-transport.js","sources":["../src/index.ts"],"sourcesContent":["import WebSocket from 'isomorphic-ws';\nimport type { ITransport, ITransportResponse } from '@cubejs-client/core';\n\n/**\n * @title @cubejs-client/ws-transport\n * @permalink /@cubejs-client-ws-transport\n * @menuCategory Cube.js Frontend\n * @subcategory Reference\n * @menuOrder 4\n * @description WebSocket transport for Cube.js client\n */\n\nclass WebSocketTransportResult {\n  protected readonly status: unknown;\n\n  protected readonly result: unknown;\n\n  public constructor({ status, message }: { status: unknown, message: unknown }) {\n    this.status = status;\n    this.result = message;\n  }\n\n  public async json() {\n    return this.result;\n  }\n}\n\ntype WebSocketTransportOptions = {\n  authorization?: string,\n  apiUrl: string,\n  // @deprecated\n  hearBeatInterval?: number,\n  heartBeatInterval?: number,\n};\n\ntype Message = {\n  messageId: number,\n  requestId: any,\n  method: string,\n  params: Record<string, unknown>,\n};\n\ntype Subscription = {\n  message: Message,\n  callback: (result: WebSocketTransportResult) => void,\n};\n\nclass WebSocketTransport implements ITransport<WebSocketTransportResult> {\n  protected readonly apiUrl: string;\n\n  protected readonly heartBeatInterval: number = 60;\n\n  protected token: string | undefined;\n\n  protected ws: any = null;\n\n  protected messageCounter: number = 1;\n\n  protected messageIdToSubscription: Record<number, Subscription> = {};\n\n  protected messageQueue: Message[] = [];\n\n  public constructor({ authorization, apiUrl, heartBeatInterval, hearBeatInterval }: WebSocketTransportOptions) {\n    this.token = authorization;\n    this.apiUrl = apiUrl;\n\n    if (heartBeatInterval) {\n      this.heartBeatInterval = heartBeatInterval;\n    } else if (hearBeatInterval) {\n      console.warn('Option hearBeatInterval is deprecated. It was replaced by heartBeatInterval.');\n      this.heartBeatInterval = hearBeatInterval;\n    }\n  }\n\n  public set authorization(token) {\n    this.token = token;\n\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n\n  public async close(): Promise<void> {\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n\n  public get authorization() {\n    return this.token;\n  }\n\n  protected initSocket() {\n    if (this.ws) {\n      return this.ws.initPromise;\n    }\n\n    const ws: any = new WebSocket(this.apiUrl);\n\n    ws.messageIdSent = {};\n\n    ws.sendMessage = (message: any) => {\n      if (!message.messageId || message.messageId && !ws.messageIdSent[message.messageId]) {\n        ws.send(JSON.stringify(message));\n        ws.messageIdSent[message.messageId] = true;\n      }\n    };\n\n    ws.sendQueue = () => {\n      this.messageQueue.forEach(message => ws.sendMessage(message));\n      this.messageQueue = [];\n    };\n\n    ws.reconcile = () => {\n      if (new Date().getTime() - ws.lastMessageTimestamp.getTime() > 4 * this.heartBeatInterval * 1000) {\n        ws.close();\n      } else {\n        Object.keys(this.messageIdToSubscription).forEach(messageId => {\n          // @ts-ignore\n          ws.sendMessage(this.messageIdToSubscription[messageId].message);\n        });\n      }\n    };\n\n    ws.lastMessageTimestamp = new Date();\n\n    ws.initPromise = new Promise<void>(resolve => {\n      ws.onopen = () => {\n        ws.sendMessage({ authorization: this.authorization });\n      };\n\n      ws.onmessage = (event: any) => {\n        ws.lastMessageTimestamp = new Date();\n\n        const message: any = JSON.parse(event.data);\n        if (message.handshake) {\n          ws.reconcile();\n          ws.reconcileTimer = setInterval(() => {\n            ws.messageIdSent = {};\n            ws.reconcile();\n          }, this.heartBeatInterval * 1000);\n          resolve();\n        }\n\n        if (this.messageIdToSubscription[message.messageId]) {\n          this.messageIdToSubscription[message.messageId].callback(\n            new WebSocketTransportResult(message)\n          );\n        }\n\n        ws.sendQueue();\n      };\n\n      ws.onclose = () => {\n        if (ws && ws.readyState !== WebSocket.CLOSED && ws.readyState !== WebSocket.CLOSING) {\n          ws.close();\n        }\n        if (ws.reconcileTimer) {\n          clearInterval(ws.reconcileTimer);\n          ws.reconcileTimer = null;\n        }\n        if (this.ws === ws) {\n          this.ws = null;\n          if (Object.keys(this.messageIdToSubscription).length) {\n            this.initSocket();\n          }\n        }\n      };\n\n      ws.onerror = ws.onclose;\n    });\n\n    this.ws = ws;\n\n    return this.ws.initPromise;\n  }\n\n  protected sendMessage(message: any) {\n    if (message.unsubscribe && this.messageQueue.find(m => m.messageId === message.unsubscribe)) {\n      this.messageQueue = this.messageQueue.filter(m => m.messageId !== message.unsubscribe);\n    } else {\n      this.messageQueue.push(message);\n    }\n\n    setTimeout(async () => {\n      await this.initSocket();\n      this.ws.sendQueue();\n    }, 100);\n  }\n\n  public request(\n    method: string,\n    { baseRequestId, ...params }: Record<string, unknown>\n  ): ITransportResponse<WebSocketTransportResult> {\n    const message: Message = {\n      messageId: this.messageCounter++,\n      requestId: baseRequestId,\n      method,\n      params\n    };\n\n    const pendingResults: WebSocketTransportResult[] = [];\n    let nextMessage: ((value: any) => void)|null = null;\n\n    const runNextMessage = () => {\n      if (nextMessage) {\n        nextMessage(pendingResults.pop());\n        nextMessage = null;\n      }\n    };\n\n    this.messageIdToSubscription[message.messageId] = {\n      message,\n      callback: (result) => {\n        pendingResults.push(result);\n        runNextMessage();\n      }\n    };\n\n    const transport = this;\n\n    return {\n      async subscribe(callback) {\n        transport.sendMessage(message);\n\n        const result = await new Promise<WebSocketTransportResult>((resolve) => {\n          nextMessage = resolve;\n          if (pendingResults.length) {\n            runNextMessage();\n          }\n        });\n\n        return callback(result, () => this.subscribe(callback));\n      },\n      async unsubscribe() {\n        transport.sendMessage({ unsubscribe: message.messageId });\n        delete transport.messageIdToSubscription[message.messageId];\n      }\n    };\n  }\n}\n\nexport default WebSocketTransport;\n"],"names":["WebSocketTransportResult","status","message","result","WebSocketTransport","authorization","apiUrl","heartBeatInterval","hearBeatInterval","token","console","warn","ws","close","initPromise","WebSocket","messageIdSent","sendMessage","messageId","send","JSON","stringify","sendQueue","messageQueue","forEach","reconcile","Date","getTime","lastMessageTimestamp","Object","keys","messageIdToSubscription","Promise","resolve","onopen","onmessage","event","parse","data","handshake","reconcileTimer","setInterval","callback","onclose","readyState","CLOSED","CLOSING","clearInterval","length","initSocket","onerror","unsubscribe","find","m","filter","push","setTimeout","method","baseRequestId","params","messageCounter","requestId","pendingResults","nextMessage","runNextMessage","pop","transport","subscribe"],"mappings":"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"}