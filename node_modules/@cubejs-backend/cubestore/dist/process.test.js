"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const shared_1 = require("@cubejs-backend/shared");
const process_1 = require("./process");
const download_1 = require("./download");
describe('CubeStoreHandler', () => {
    it('acquire with release', async () => {
        jest.setTimeout(60 * 1000);
        try {
            fs_1.default.unlinkSync(download_1.getBinaryPath());
        }
        catch (e) {
            console.log(e);
        }
        const handler = new process_1.CubeStoreHandler({
            stdout: (v) => {
                console.log(v.toString());
            },
            stderr: (v) => {
                console.log(v.toString());
            },
            onRestart: () => {
                throw new Error('Process should not restart, while we are testing it!');
            },
        });
        await handler.acquire();
        // It's enough, just to test that it starts.
        await shared_1.pausePromise(5 * 1000);
        await handler.release(true);
    });
});
//# sourceMappingURL=process.test.js.map